package com.example.shop.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.shop.entity.Member;
import com.example.shop.entity.Product;
import com.example.shop.repository.MemberRepository;
import com.example.shop.repository.ProductRepository;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

@Controller
public class MyController {
	@Autowired
	MemberRepository memberRepository;
	@Autowired
	ProductRepository productRepository;
	
	@RequestMapping("/")
	public String root() {
		return "main";
	}
	 @RequestMapping("/main")
	    public String main() {
	        return "main"; 
	}
	//로그인
	@RequestMapping("/loginForm")
	public String loginForm() {
		return "loginForm";
	}
	@RequestMapping("/login")
	public String login(@RequestParam("username") String username, @RequestParam("password") String password, HttpServletRequest req) {
		HttpSession session = req.getSession();
		Member member = memberRepository.findByUsernameAndPassword(username, password);
		if(member != null) {
			session.setAttribute("username", username);
			System.out.println("로그인 성공");
			return "redirect:main";
		}else {
			System.out.println("로그인 실패");
			return "loginForm";
		}
	}
	@RequestMapping("/logout")
	public String logout(HttpServletRequest req) {
		HttpSession session = req.getSession();
		session.invalidate();
		return "redirect:main";
	}
	//회원가입
	@RequestMapping("/registForm")
	public String registForm() {
		return "registForm";
	}
	@RequestMapping("/regist")
	public String regist(HttpServletRequest req) {
		String username = req.getParameter("username");
		String password = req.getParameter("password");
		String name = req.getParameter("name");
		String address = req.getParameter("address");
		String tel = req.getParameter("tel");
		String role = req.getParameter("role");
		Member member = new Member();
		member.setUsername(username);
		member.setPassword(password);
		member.setName(name);
		member.setAddress(address);
		member.setTel(tel);
		member.setRole(role);
		member.setRegdate(LocalDate.now());
		memberRepository.save(member);
		return "redirect:loginForm";
	}
	
	//마이페이지(관리자)
	@RequestMapping("/mypage")
	public String mypage(HttpServletRequest req, Model model) {
		HttpSession session = req.getSession();
		String username = (String)session.getAttribute("username");
		if(username != null && username.equals("admin")) {
			List<Product> product = productRepository.findAll();
			System.out.println(product);
			model.addAttribute("product", product);
			return "mypage";
		}else {
	        return "main";
	    }
	}
}
